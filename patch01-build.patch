diff --git a/src/FreeFileSync/Source/afs/sftp.cpp b/src/FreeFileSync/Source/afs/sftp.cpp
index dc8a353..abd1fd0 100644
--- a/src/FreeFileSync/Source/afs/sftp.cpp
+++ b/src/FreeFileSync/Source/afs/sftp.cpp
@@ -56,9 +56,9 @@ const std::chrono::seconds SFTP_CHANNEL_LIMIT_DETECTION_TIME_OUT(30);
 
 //attention: if operation fails due to time out, e.g. file copy, the cleanup code may hang, too => total delay = 2 x time out interval
 
-const size_t SFTP_OPTIMAL_BLOCK_SIZE_READ  = 4 * MAX_SFTP_READ_SIZE;     //https://github.com/libssh2/libssh2/issues/90
-const size_t SFTP_OPTIMAL_BLOCK_SIZE_WRITE = 4 * MAX_SFTP_OUTGOING_SIZE; //
-static_assert(MAX_SFTP_READ_SIZE == 30000 && MAX_SFTP_OUTGOING_SIZE == 30000, "reevaluate optimal block sizes if these constants change!");
+const size_t SFTP_OPTIMAL_BLOCK_SIZE_READ  = 4 * 30000;     //https://github.com/libssh2/libssh2/issues/90
+const size_t SFTP_OPTIMAL_BLOCK_SIZE_WRITE = 4 * 30000; //
+static_assert(30000 == 30000 && 30000 == 30000, "reevaluate optimal block sizes if these constants change!");
 /*
 Perf Test, Sourceforge frs, SFTP upload, compressed 25 MB test file:
 
@@ -1657,7 +1657,7 @@ private:
             runSftpCommand(login_, L"libssh2_sftp_mkdir", //throw SysError
                            [&](const SshSession::Details& sd) //noexcept!
             {
-#if 1 //let's see how LIBSSH2_SFTP_DEFAULT_MODE works out:
+#if 0 //let's see how LIBSSH2_SFTP_DEFAULT_MODE works out:
                 return ::libssh2_sftp_mkdir(sd.sftpChannel, getLibssh2Path(afsPath).c_str(), LIBSSH2_SFTP_DEFAULT_MODE);
 #else //default for newly created directories: 0777
                 return ::libssh2_sftp_mkdir(sd.sftpChannel, getLibssh2Path(afsPath).c_str(), LIBSSH2_SFTP_S_IRWXU | LIBSSH2_SFTP_S_IRWXG | LIBSSH2_SFTP_S_IRWXO);
